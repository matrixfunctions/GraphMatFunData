%# Representation of a computation graph
%# Reference implementation of An efficient algorithm to compute the exponential of skew-Hermitian matrices for the time integration of the Schr√∂dinger equation, P. Bader, S. Blanes, F. Casas, M. Seydaoglu with m=3 multiplications. Run compress_graph! before generating code from this graph.
%# Domain: Unknown
%# Generated by command: GraphMatFunData/src/generate_ref.jl
%# Created: 2021-07-02T09:55:58.402 by user Elias Jarlebring

graph_coeff_type="Complex{BigFloat}";

coeff1=0.0 + 0.0i;
coeff2=1.0 + 0.0i;
Bb2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba4_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.5496085391143601578600000000000000000000000000000000000000000000000000000000002i;
coeff2=0.1620095284677366090399999999999999999999999999999999999999999999999999999999995 + 0.0i;
Bb4_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba2=coeff1*I+coeff2*A;
B2=Ba2*Bb2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.6632100444166243859300000000000000000000000000000000000000000000000000000000013i;
Ba4_3=coeff1*Ba4_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.01417981805211804395999999999999999999999999999999999999999999999999999999999994i;
Bb4_3=coeff1*Bb4_2+coeff2*B2;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba3_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba3=coeff1*Ba3_2+coeff2*B2;
coeff1=0.999999999999999999280000000000000000000000000000000000000000000000000000000004 + 0.0i;
coeff2=-0.0 - 0.9999999999999923398699999999999999999999999999999999999999999999999999999999999i;
T2k2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=-0.1354940963622070306600000000000000000000000000000000000000000000000000000000009 + 0.0i;
T2k3=coeff1*T2k2+coeff2*B2;
coeff1=0.0 + 0.0i;
coeff2=0.1077500000000000000000000000000000000000000000000000000000000000000000000000002 + 0.0i;
Bb3_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.02693906873598870732999999999999999999999999999999999999999999999999999999999991i;
Bb3=coeff1*Bb3_2+coeff2*B2;
B3=Ba3*Bb3;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba4=coeff1*Ba4_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=-0.03415953916892111402999999999999999999999999999999999999999999999999999999999991 + 0.0i;
Bb4=coeff1*Bb4_3+coeff2*B3;
B4=Ba4*Bb4;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k4=coeff1*T2k3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
T2k6=coeff1*T2k4+coeff2*B4;
output0=T2k6
