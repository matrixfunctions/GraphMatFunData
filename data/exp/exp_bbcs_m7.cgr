%# Representation of a computation graph
%# Reference implementation of An efficient algorithm to compute the exponential of skew-Hermitian matrices for the time integration of the Schr√∂dinger equation, P. Bader, S. Blanes, F. Casas, M. Seydaoglu with m=7 multiplications. Run compress_graph! before generating code from this graph.
%# Domain: Unknown
%# Generated by command: GraphMatFunData/src/generate_ref.jl
%# Created: 2021-07-02T09:55:58.493 by user Elias Jarlebring

graph_coeff_type="Complex{BigFloat}";

coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba3_2=coeff1*I+coeff2*A;
coeff1=0.3420232802536553111900000000000000000000000000000000000000000000000000000000268 + 0.0i;
coeff2=0.0 - 0.07129994490831037674750000000000000000000000000000000000000000000000000000000101i;
Ba6_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=-0.0 - 0.1651021019019282968774999999999999999999999999999999999999999999999999999999998i;
Ba7_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.25 + 0.0i;
Bb3_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.25 + 0.0i;
Bb2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba4_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb4_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_2=coeff1*I+coeff2*A;
coeff1=0.0 + 0.0i;
coeff2=0.25 + 0.0i;
Ba2=coeff1*I+coeff2*A;
B2=Ba2*Bb2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb3=coeff1*Bb3_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_3=coeff1*Bb8_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba4_3=coeff1*Ba4_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba3=coeff1*Ba3_2+coeff2*B2;
B3=Ba3*Bb3;
coeff1=1.0 + 0.0i;
coeff2=-1.093022784715648979870000000000000000000000000000000000000000000000000000000003 + 0.0i;
Ba7_3=coeff1*Ba7_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.2537715581771087332300000000000000000000000000000000000000000000000000000000014i;
Ba7_4=coeff1*Ba7_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba4=coeff1*Ba4_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.04734706733127109465999999999999999999999999999999999999999999999999999999999976 + 0.0i;
Ba6_3=coeff1*Ba6_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_4=coeff1*Bb8_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k3=coeff1*T2k2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k4=coeff1*T2k3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb4_3=coeff1*Bb4_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Bb4=coeff1*Bb4_3+coeff2*B3;
B4=Ba4*Bb4;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_5=coeff1*Bb8_4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k5=coeff1*T2k4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.02218660063536621027000000000000000000000000000000000000000000000000000000000015i;
Ba6_4=coeff1*Ba6_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=-9.747589856153790000000000000000000000000000000000000000000000000000000000000021e-06 + 0.0i;
Ba6_5=coeff1*Ba6_4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=0.0005437426743473122499999999999999999999999999999999999999999999999999999999999975 + 0.0i;
Ba7_5=coeff1*Ba7_4+coeff2*B4;
coeff1=0.0 + 0.0i;
coeff2=0.03000000000000000000000000000000000000000000000000000000000000000000000000000012 + 0.0i;
Ba5_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.008774760968797038589999999999999999999999999999999999999999999999999999999999958i;
Ba5_3=coeff1*Ba5_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=-0.0009784845352378095399999999999999999999999999999999999999999999999999999999999989 + 0.0i;
Ba5_4=coeff1*Ba5_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba5=coeff1*Ba5_4+coeff2*B4;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb5_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.1239536958582831314799999999999999999999999999999999999999999999999999999999995i;
Bb5_3=coeff1*Bb5_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=-0.01120269484108559237300000000000000000000000000000000000000000000000000000000003 + 0.0i;
Bb5_4=coeff1*Bb5_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 1.236724053825989600000000000000000000000000000000000000000000000000000000000005e-05i;
Bb5=coeff1*Bb5_4+coeff2*B4;
B5=Ba5*Bb5;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k6=coeff1*T2k5+coeff2*B5;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba6=coeff1*Ba6_5+coeff2*B5;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba7_6=coeff1*Ba7_5+coeff2*B5;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_6=coeff1*Bb8_5+coeff2*B5;
coeff1=2.923777583965536735590000000000000000000000000000000000000000000000000000000014 + 0.0i;
coeff2=0.0 + 0.3612832508687206712750000000000000000000000000000000000000000000000000000000008i;
Bb6_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=0.1240818356655045022099999999999999999999999999999999999999999999999999999999999 + 0.0i;
Bb6_3=coeff1*Bb6_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=-0.0 - 0.01957157093642723948000000000000000000000000000000000000000000000000000000000005i;
Bb6_4=coeff1*Bb6_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=2.425253007433924999999999999999999999999999999999999999999999999999999999999994e-05 + 0.0i;
Bb6_5=coeff1*Bb6_4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Bb6=coeff1*Bb6_5+coeff2*B5;
B6=Ba6*Bb6;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba7=coeff1*Ba7_6+coeff2*B6;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k7=coeff1*T2k6+coeff2*B6;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb8_7=coeff1*Bb8_6+coeff2*B6;
coeff1=0.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_3=coeff1*Ba8_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_4=coeff1*Ba8_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_5=coeff1*Ba8_4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_6=coeff1*Ba8_5+coeff2*B5;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Ba8_7=coeff1*Ba8_6+coeff2*B6;
coeff1=0.0 + 0.0i;
coeff2=-0.0 - 0.1651021019019282968774999999999999999999999999999999999999999999999999999999998i;
Bb7_2=coeff1*I+coeff2*A;
coeff1=1.0 + 0.0i;
coeff2=-1.093022784715648979870000000000000000000000000000000000000000000000000000000003 + 0.0i;
Bb7_3=coeff1*Bb7_2+coeff2*B2;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.2537715581771087332300000000000000000000000000000000000000000000000000000000014i;
Bb7_4=coeff1*Bb7_3+coeff2*B3;
coeff1=1.0 + 0.0i;
coeff2=0.0005437426743473122499999999999999999999999999999999999999999999999999999999999975 + 0.0i;
Bb7_5=coeff1*Bb7_4+coeff2*B4;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
Bb7_6=coeff1*Bb7_5+coeff2*B5;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Bb7=coeff1*Bb7_6+coeff2*B6;
B7=Ba7*Bb7;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Ba8=coeff1*Ba8_7+coeff2*B7;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
Bb8=coeff1*Bb8_7+coeff2*B7;
B8=Ba8*Bb8;
coeff1=1.0 + 0.0i;
coeff2=0.0 + 0.0i;
T2k8=coeff1*T2k7+coeff2*B7;
coeff1=1.0 + 0.0i;
coeff2=1.0 + 0.0i;
T2k10=coeff1*T2k8+coeff2*B8;
output0=T2k10
